using Microsoft.EntityFrameworkCore;

namespace RSSVibe.Data.Entities;

/// <summary>
/// Server-side storage for refresh tokens with expiration and revocation support.
/// </summary>
public sealed class RefreshToken
{
    /// <summary>
    /// Primary key. UUIDv7 generated by application.
    /// </summary>
    public Guid Id { get; set; }

    /// <summary>
    /// Foreign key to AspNetUsers. User who owns this refresh token.
    /// </summary>
    public Guid UserId { get; set; }

    /// <summary>
    /// Cryptographically secure random token string (base64 encoded).
    /// Unique index enforced in database.
    /// </summary>
    public required string Token { get; set; }

    /// <summary>
    /// Expiration timestamp. Tokens cannot be used after this time.
    /// </summary>
    public DateTime ExpiresAt { get; set; }

    /// <summary>
    /// Creation timestamp. Set to UtcNow on creation.
    /// </summary>
    public DateTime CreatedAt { get; set; }

    /// <summary>
    /// Revocation timestamp. Null if token is still active.
    /// Set when token is used, user logs out, or security breach detected.
    /// </summary>
    public DateTime? RevokedAt { get; set; }

    /// <summary>
    /// Flag indicating token has been used for refresh.
    /// Used to detect replay attacks (token reuse).
    /// </summary>
    public bool IsUsed { get; set; }

    /// <summary>
    /// Navigation property to user entity.
    /// </summary>
    public ApplicationUser User { get; set; } = null!;
}
